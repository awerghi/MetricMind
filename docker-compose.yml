services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: zookeeper
    ports:
      - "2181:2181"
    networks:
      - metrics-net
    environment:
      ZOOKEEPER_CLIENT_PORT : 2181

  kafka :
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka
    ports:
      - "9092:9092"
      - "29092:29092"
    networks:
      - metrics-net
    depends_on:
      - zookeeper
    environment:
      KAFKA_ZOOKEEPER_CONNECT : zookeeper:2181
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:29092,EXTERNAL://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:29092,EXTERNAL://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'


  pushgateway:
    image: prom/pushgateway:latest
    ports:
      - "9091:9091"
    networks:
      - metrics-net

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - "9090:9090"
    networks:
      - metrics-net
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    restart: always

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    networks:
      - metrics-net
    restart: always

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.14.1
    container_name: elasticsearch
    ports:
      - "9200:9200"
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    networks:
      - metrics-net

  kibana:
    image: docker.elastic.co/kibana/kibana:8.14.1
    container_name: kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"
    networks:
      - metrics-net
    depends_on:
      - elasticsearch

  filebeat:
    image: docker.elastic.co/beats/filebeat:8.14.1
    container_name: filebeat
    user: root
    volumes:
      - ./filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - ./logs:/logs:ro
    depends_on:
      - elasticsearch
    command: ["--strict.perms=false"]
    networks:
      - metrics-net

  timescaledb:
    image: timescale/timescaledb:latest-pg17
    container_name: timescaledb
    ports:
      - "5432:5432"
    networks:
      - metrics-net
    environment:
      POSTGRES_PASSWORD: timescaledb
      POSTGRES_DB: alerts_db
      POSTGRES_USER: timescaledb

    volumes:
      - timescale_data:/var/lib/postgresql/data
    restart: always

  metrics-publisher-app:
    build: ./agent-metrics-job
    depends_on:
      - kafka
      - pushgateway
      - filebeat
    networks:
      - metrics-net
    volumes:
      - ./logs:/app/src/logs
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:29092

  metrics-transformer:
    build: ./metrics-transformer
    depends_on:
      - metrics-publisher-app
    networks:
      - metrics-net
    volumes:
      - ./logs:/app/logs
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:29092

  llm-pipe:
    build: ./llm-pipe
    networks:
      - metrics-net
    depends_on:
      - metrics-transformer
    volumes:
      - ./logs:/app/logs
    environment:
      KAFKA_BOOTSTRAP_SERVERS : kafka:29092


networks:
  metrics-net :
    external: true

volumes:
  timescale_data: